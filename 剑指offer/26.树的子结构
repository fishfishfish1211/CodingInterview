public boolean hasSubtree(TreeNode pRoot1, TreeNode pRoot2) {
    return dfs(pRoot1, pRoot2);
}

private boolean dfs(TreeNode root1, TreeNode root2) {
    if (root1 == null || root2 == null) return false;

    return isSame(root1, root2) || dfs(root1.left, root2) || dfs(root1.right, root2);
}

private boolean isSame(TreeNode root1, TreeNode root2) {
    if (root2 == null) return true;

    if (root1 == null || root1.val != root2.val) return false;

    return isSame(root1.left, root2.left) && isSame(root1.right, root2.right);
}
