public int[] maxInWindows(int[] nums, int k) {
    if (nums == null || nums.length == 0 || k <= 0 || nums.length < k) return new int[0];

    int[] res = new int[nums.length - k + 1];
    int index = 0;
    Deque<Integer> deque = new LinkedList<>();
    for (int i = 0; i < nums.length; ++i) {
        while (!deque.isEmpty() && nums[i] >= nums[deque.peekLast()]) deque.pollLast();
        deque.addLast(i);

        if (deque.peekFirst() == i - k) deque.pollFirst();

        if (i >= k - 1) res[index++] = nums[deque.peekFirst()];
    }

    return res;
}
