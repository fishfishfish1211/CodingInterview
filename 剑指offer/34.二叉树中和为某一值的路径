public List<List<Integer>> findPath(TreeNode root, int sum) {
    List<List<Integer>> res = new LinkedList<>();
    LinkedList<Integer> path = new LinkedList<>();

    dfs(root, sum, path, res);

    return res;
}

private void dfs(TreeNode root, int sum, LinkedList<Integer> path, List<List<Integer>> res) {
    if (root == null) return;

    path.add(root.val);
    sum -= root.val;

    if (root.left == null && root.right == null && sum == 0) {
        res.add(new LinkedList<>(path));
    }

    dfs(root.left, sum, path, res);
    dfs(root.right, sum, path, res);

    path.pollLast();
}
